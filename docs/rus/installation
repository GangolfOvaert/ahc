Установка и первоначальная настройка.

Для того что бы установить пакет ahc, нужно удовлетворить все зависимости.
Повышаем привилегии пользователя до рута, обновляем информацию и устанавливаем
необходимые  пакеты:
$ sudo -i
# apt-get update && apt-get upgrade -y
# apt-get install -y python-pip python-mysqldb python-pycurl python-flup git-core make

Получаем исходные тексты программы, для последующей установки:
# cd /usr/src/ && git clone https://github.com/gotlium/ahc.git
# cd ahc/ && pip install -r requirements.txt

Далее требуется выбрать тип установки. Предлагается два варианта:
а) используя make
б) сборка deb пакета.

Установка по умолчанию с использованием make:
# make install

Сборка и установки deb пакета:
# fakeroot
# ./makedeb
# dpkg -i ahc.deb

На этом - базовая установка закончена. Остается лишь получить все
сопутствующие пакеты, для разработки или развертки, а так же настроить
сетевой экран.

Перед установкой необходимых пакетов, вам стоит ознакомиться с файлом
/usr/lib/ahc/templates/lamp.sh. Удалите в нем пакеты,
которые, Вы использовать не будете. К примеру если Вы пишите на python,
то в массиве с пакетами для python, Вы можете удалить или дописать
необходимые Вам пакеты по умолчанию.
После редактирования, необходимо выполнить установку.
Выполните команду:
# ahc -m install -s lamp
LAMP - это условный сервис, который подразумевает совокупность сервисов и
сопутствующих пакетов.
Фактически в данном случае это может не соответствовать выбранной
аббревиатуре. Так как Вы могли оставить и выбрать связку Python+Nginx,
а в качестве БД используете SQLite.

Установка сетевого экрана:
# ahc -m install -s firewall

Если Ваш SSH демон использует порт отличный от 22, то стоит прописать его в
файле: /usr/lib/ahc/templates/fw.conf. В противном случае Вы можете
лишиться доступа к удаленному серверу. По умолчанию в настройках фаервола
уже прописаны правила для DNS,HTTP,HTTPS,SSH,SMTP,POP3. Если Вы не
используете что-то из списка, то лучше удалить ненужные правила.

После установки программы, пакетов и фаервола, программа готова к
дальнейшему использованию. Вам нужно решить какие средства Вы хотите
использовать. Если вы хотите использовать SSL, то изначально нужно
cгенерировать сертификаты, для вашего веб-сервера.

Для Apache:
# ahc -m install -s apache2_ssl

Для Nginx:
# ahc -m install -s nginx_ssl

Если Вам не требуется поддержка SSL в веб-сервер, то обязательно укажите это
в файле конфигурации. Так как по умолчанию SSL может быть включен.
Файл конфигурации находится по адресу: /etc/ahc.conf
Установите директиву: use_ssl = 0 .

Файл конфигурации достаточно прост. Перед началом работы,
конфигурирование является обязательным.
Рассмотрим самые важные значения, перед тем как приступить к примерам
эксплуатации виртуальных хостов.

Откройте файл конфигурации: /etc/ahc.conf

projects_directory - директория, где хранятся проекты
useruid - id пользователя, под учетной записью которого Вы работаете.
website_folder - папка, в которой хранится проект. Может быть www или
    httpdocs. Тут как Вам удобнее и как вы привыкли.
Все что начинается с "bin" - это исполняемые файлы. Они должны
соответствовать действительности.

Нужно сразу указывать необходимый порт используемого веб-сервера. По
умолчанию apache использует пор 80, а nginx 81.

Если вы используете только nginx, Вы скорее всего не устанавливали apache. И
потому сразу меняйте порт с 81 на 80 и 444 на 443.

При использовании MySQL, стоит указать правильные данные для авторизации.
Или же удалить дефолтный пароль, что бы программа запрашивала пароль
постоянно.

Директив конфигурации очень много. И их описание выходит за предел данного
мануала по установке.
После редактирования конфигурационного файла, Вы можете одной командой
добавить хост на любимом веб-сервере и интерпретаторе.

К примеру:
# ahc -m apache -t php -a example.com
# ahc -m apache -t python -a example.com
# ahc -m apache -t django -a example.com
# ahc -m apache -t ruby -a example.com
# ahc -m apache -t ror -a example.com

В случае с Python и Django можно использовать ключ -w,
если вам требуется модуль mod_wsgi и -v, когда необходим virtual env.

опция -b позволит вам добавить авторизацию, для сендбокса.
опция -o оптимизировать заголовки, для файлов статики в apache.

Отдельно хочется сказать о том, что конфигурацию хостов,
настроек и тд. Вы можете задать свою.

Шаблоны всех конфигураций, лежат в директории templates.
