Установка и настройка Nginx

> Использования nginx в качестве фронтенда.

Для установки nginx в качестве фронтенда, нужно выполнить команду:
# ahc -m install -s nginx_proxy

тогда он установится в качестве фронтенда. Настройки можно просмотреть в
добавленном файле конфигурации: /etc/nginx/sites-available/default

Вам лишь остается изменить стандартные порты в файле apache /etc/apache2/ports.conf
Обо всем этом вас проинформирует ahc. 80 придется заменить на 8080. Так же
это нужно будет сделать и в файле конфиуграции ahc в секции apache2. Файл
располагается тут: /etc/ahc.conf

После все создаваемые виртуальные хосты в apache будут иметь порт 8080. Сам
nginx будет проксировать запросы и кешировать статику. Поведение вы можете
изменить отредактировав файл: /etc/nginx/sites-available/default

Если требуется реальный ip адрес клиента при проксировании,
в файле хоста apache раскомментируйте три строчки RPAF.
Перезапустите apache:
# service apache2 restart

Конфигурация:
	RPAFenable On
	RPAFsethostname On
	RPAFproxy_ips 127.0.0.1

Параметр RPAFproxy_ips содержит перечень IP-адресов, обслуживаемых nginx.
Если адресов несколько, укажите из через пробел, например,
RPAFproxy_ips 127.0.0.1 xxx.xxx.xxx.xxx yyy.yyy.yyy.yyy zzz.zzz.zzz.zzz

Внимание! Для nginx 1.x из конфигурации исключается строка RPAFsethostname On



> Использования nginx в качестве бэкенда.

Удалите apache, если он установлен и больше не требуется. Измените порт с 81
на 80 в файле конфигурации ahc в секции nginx. Перезагрузите nginx
# service nginx restart

Теперь вы можете добавлять,удалять, активировать и деактивировать хосты.
Даже если nginx настроен в качестве фронтенда, возможность использовать его
в качестве бэкенда остается по умолчанию.

Примечание:
    Если требуется SSL доступ, то выполняем команду:
        # ahc -m install -s nginx_ssl



> Пример конфигурационного файла Nginx:

# Количество процессов рекомендуется устанавливать равному количеству ядер CPU
worker_processes  1;
events {
    worker_connections  1024;
}

# [ debug | info | notice | warn | error | crit ]
error_log  /var/log/nginx.error_log error;

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format main  '$remote_addr - $remote_user [$time_local] $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    # При большой посещаемости рекомендуется отключить логирование запросов
    # access_log off;

    sendfile       on;
    tcp_nopush     on;
    tcp_nodelay    on;

    # Настройки GZIP
    # http://sysoev.ru/nginx/docs/http/ngx_http_gzip_module.html
    gzip             on;
    gzip_min_length  1100;
    # Разрешает или запрещает сжатие ответа методом gzip для проксированных запросов в зависимости от запроса и ответа.
    gzip_proxied     expired no-cache no-store private auth;
    # Разрешает сжатие ответа методом gzip для указанных MIME-типов в дополнение к text/html, который сжимается всегда.
    gzip_types       text/plain application/xml application/x-javascript text/javascript text/css;
    # Запрещаем сжатие gzip для IE6
    gzip_disable     "msie6";
    # Уровень gzip-компрессии
    gzip_comp_level 3;

    server {
        listen       80 default;
        server_name  site.ru www.site.ru;
        # access_log  /var/log/httpd/access.log  main;

        # Main location
        location / {
            proxy_pass         http://127.0.0.1:8080/;
            proxy_redirect     off;
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            client_max_body_size       10m;
            client_body_buffer_size    128k;
            proxy_connect_timeout      90;
            proxy_send_timeout         90;
            proxy_read_timeout         90;
            proxy_buffer_size          4k;
            proxy_buffers              4 32k;
            proxy_busy_buffers_size    64k;
            proxy_temp_file_write_size 64k;
        }
        # Static files location
        location ~*^.+\.(jpg|jpeg|gif|png|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|tar|wav|bmp|rtf|js)$
        {
            root   /var/www/vhosts/site.ru/httpdocs/;
        }

    }
}
В секции server_name  site.ru www.site.ru; указывается список доменов,
которые будут обрабатываться nginx.

nginx берет на себя функции по отдаче статики, например графических файлов.
Список расширений указывается в следующем блоке:

# Static files location

location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|tar|wav|bmp|rtf|js)$ {

     root   /var/www/vhosts/site.ru/httpdocs/;

}

Не забудьте указать корректный путь к корневой директории сайта.
