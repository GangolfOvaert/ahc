--------------------------------------------------------------
                          О программе
--------------------------------------------------------------
Пакет для контроля виртуальных хостов apache/nginx, mysql/ftp
пользователей, bind зон, apache(пользовательских сертификатов)
на локальных и боевых веб-серверах. Протестировано на
дистрибутивах Ubuntu/Debian Linux.
Опубликовано под лицензией GNU GPL v.2.
--------------------------------------------------------------
Помощь по портированию на Redhat подобные дистрибутивы
приветствуется.
--------------------------------------------------------------

##############################################################

--------------------------------------------------------------
                        Установка пакета
--------------------------------------------------------------
$ sudo -i
# apt-get install -y python-pip python-mysqldb python-flup git-core make
# cd /usr/src/ && git clone https://github.com/gotlium/ahc.git
# cd ahc/ && pip install -r requirements.txt && make install
# cd && ahc -m install -s lamp && ahc -m install -s firewall
--------------------------------------------------------------
Файл конфигурации тут(ознакомиться обязательно): /etc/ahc.conf
--------------------------------------------------------------

##############################################################

--------------------------------------------------------------
                           Добавление
--------------------------------------------------------------
Хост для веб-сервера Apache:
--------------------------------------------------------------
# ahc -m install -s apache2_ssl
# ahc -m test -s apache
# ahc -m apache -t php -a example.com
--------------------------------------------------------------

--------------------------------------------------------------
Хост для веб-сервера Nginx:
--------------------------------------------------------------
# ahc -m install -s nginx_ssl
# ahc -m test -s nginx
# ahc -m nginx -t php -a example.com
--------------------------------------------------------------

--------------------------------------------------------------
FTP пользователи:
--------------------------------------------------------------
# ahc -m install -s ftp
# ahc -m test -s ftp
# ahc -m ftp -a example.com -u User -p Password
--------------------------------------------------------------

--------------------------------------------------------------
MySQL пользователи:
--------------------------------------------------------------
# ahc -m install -s mysql
# ahc -m test -s mysql
# ahc -m mysql -a example.com -u User -p Password
--------------------------------------------------------------

--------------------------------------------------------------
Bind зоны:
--------------------------------------------------------------
# ahc -m install -s bind
# ahc -m test -s bind
# ahc -m bind -a example.com -i 127.0.0.1
--------------------------------------------------------------

--------------------------------------------------------------
Git deployment:
--------------------------------------------------------------
# ahc -m git -a example.com
# ahc -m git -d example.com
--------------------------------------------------------------

--------------------------------------------------------------
Шифрование директории проекта на локальной машине:
--------------------------------------------------------------
# ahc -m crypt -a mount
# ahc -m crypt -a umount
--------------------------------------------------------------

--------------------------------------------------------------
Фаервол:
--------------------------------------------------------------
# ahc -m install -s firewall
# iptables -L -n
    ИЛИ
# cat /etc/init.d/rc.fw
--------------------------------------------------------------


##############################################################

--------------------------------------------------------------
            Возможные варианты использование флагов
--------------------------------------------------------------

--------------------------------------------------------------
Apache2
--------------------------------------------------------------
# ahc -m apache -t php -a hostname -o -x
# ahc -m apache -t php -a hostname -o
# ahc -m apache -t php -a hostname -x
# ahc -m apache -t php -a hostname
# ahc -m apache -t php -d hostname
# ahc -m apache -t php -e hostname
# ahc -m apache -t php -f hostname
# ahc -m apache -t php -l

--------------------------------------------------------------
Nginx
--------------------------------------------------------------
# ahc -m nginx -t php -a hostname
# ahc -m nginx -t php -d hostname
# ahc -m nginx -t php -e hostname
# ahc -m nginx -t php -f hostname
--------------------------------------------------------------

--------------------------------------------------------------
FTP
--------------------------------------------------------------
# ahc -m ftp -a hostname -u user -p password
# ahc -m ftp -a hostname -u user -p random
# ahc -m ftp -a hostname -u user -p password -f folder
# ahc -m ftp -a hostname
# ahc -m ftp -d hostname

--------------------------------------------------------------
MySQL
--------------------------------------------------------------
# ahc -m mysql -a hostname -u user -p password
# ahc -m mysql -a hostname -u user -p random
# ahc -m mysql -a hostname
# ahc -m mysql -d hostname -u user

--------------------------------------------------------------
Bind9
--------------------------------------------------------------
# ahc -m bind -a hostname -i ip-address
# ahc -m bind -d hostname

--------------------------------------------------------------
Тесты
--------------------------------------------------------------
# ahc -m test -s apache
# ahc -m test -s nginx
# ahc -m test -s ftp
# ahc -m test -s mysql
# ahc -m test -s bind
# ahc -m test -s all
--------------------------------------------------------------

--------------------------------------------------------------
Сертификаты
--------------------------------------------------------------
# ahc -m certs -a email-address
# ahc -m certs -d email-address
# ahc -m certs -l
--------------------------------------------------------------

--------------------------------------------------------------
Защита проекта
--------------------------------------------------------------
# ahc -m crypt -a encrypt
# ahc -m crypt -a mount
# ahc -m crypt -a umount
# ahc -m crypt -a decrypt
    ИЛИ
# ahc -m crypt -a e
# ahc -m crypt -a m
# ahc -m crypt -a u
# ahc -m crypt -a d
--------------------------------------------------------------

--------------------------------------------------------------
Установка конфигураций сервисов:
--------------------------------------------------------------
# ahc -m install -s apache2_ssl
# ahc -m install -s nginx_ssl
# ahc -m install -s ftp
# ahc -m install -s bind
# ahc -m install -s mysql
# ahc -m install -s firewall
# ahc -m install -s nginx_proxy
# ahc -m install -s certs
# ahc -m install -s lighttpd
# ahc -m install -s sendmail
# ahc -m install -s shell
# ahc -m install -s mail
# ahc -m install -s jira
# ahc -m install -s web
# ahc -m install -s all
--------------------------------------------------------------

Общие флаги:
    --version - текущая версия
    -h or --help - справка

Bind флаги:
    -a = добавление зоны
    -d = удаление зоны
    -i = ip-address для указанной зоны


Флаги для создания сертификатов:
    -a = добавить пользователя
    -d = удалить пользователя
    -l = список пользователей


MySQL флаги:
    -a = добавить [бд] или [хост]
    -d = удалить бд
    -u = пользователь(необязательно)
    -p = пароль(необязательно)

    Примечание:
        По умолчанию пользователь и пароль = хосту


FTP флаги:
    -a = добавить хост
    -d = удалить хост
    -u = пользователь (необязательно)
    -p = пароль (необязательно)
    -f = указываем вручную папку (необязательно)

    Примечание:
        По умолчанию пользователь и пароль = хосту


Флаги установки сервисов:
    -s = имя сервиса


Флаги Apache/Nginx-a:
    -t = тип [php,python,django,ruby,ror]
    -a = добавить хост
    -d = удалить хост
    -e = активирова хост
    -f = деактивировать хост
	-o = добавить директивы для оптимизации статики(необязательно)
	-x = включить SSL защиту(необязательно)
	-l = показать список доступных хостов
    -w = wsgi/uwsgi конфиг для python или django
    -b = авторизация. аргумент вида=пользователь:пароль

********************************************************************************

Сейчас из коробки поддерживается vsftpd версий <= 2.3.2. Так как в версиях
> 2.3.2 - ужесточили политику безопасности.
?: При входе пользователем на FTP-Server версии 2.3.5 выдается сообщение:
"500 OOPS: vsftpd: refusing to run with writable root inside chroot()".
Всё верно, в 2.3.5 ужесточены правила безопасности. Теперь сервер не делает
chroot() в домашний каталог пользователя, если на него стоят права на запись.
Данное ограничение можно обойти путем установки расширенной версии 2.3.5 с
заданием в файле настроек опции allow_writable_root, либо установить 3.0.0 и
изменить значение опции allow_writable_chroot конфигурационного файла.